@tailwind base;
@tailwind components;
@tailwind utilities;

body {
    font-family: 'Inter', sans-serif;
    /* A cor de fundo base é controlada pelo Tailwind (bg-white no LandingPage.js) */
    /* text-gray-800 é aplicado no contêiner principal em LandingPage.js */
}

/* Estilos para scrollbar-hide, se necessário globalmente */
.scrollbar-hide::-webkit-scrollbar {
    display: none;
}

.scrollbar-hide {
    -ms-overflow-style: none;  /* IE and Edge */
    scrollbar-width: none;  /* Firefox */
}

/* Adicionando a classe de animação de delay que estava no HTML original, caso seja usada em outros lugares */
/* No LandingPage.js, foi usado [animation-delay:1s] do Tailwind diretamente */
.animation-delay-1000 {
    animation-delay: 1s;
}

/* As classes .hero-bg, .glassmorphism-card, .nav-link:hover, etc., do HTML original 
   foram traduzidas para classes Tailwind diretamente nos componentes JSX 
   ou seus efeitos foram replicados com classes Tailwind. */

/* As inversões de cores para o tema claro (ex: .text-gray-200 para cor escura)
   foram tratadas aplicando as classes Tailwind corretas para as cores claras desejadas no JSX. */

/* Animações para o template DiamondStatus */
@keyframes fall {
  0% { transform: translateY(-100px) rotate(0deg); opacity: 0; }
  10% { opacity: 1; }
  90% { opacity: 1; }
  100% { transform: translateY(100vh) rotate(360deg); opacity: 0; }
}

@keyframes shimmer {
  0% { text-shadow: 0 0 5px var(--diamond-primary-color, #E5E7EB), 0 0 10px var(--diamond-primary-color, #E5E7EB), 0 0 15px #fff, 0 0 20px #fff; }
  50% { text-shadow: 0 0 10px var(--diamond-primary-color, #E5E7EB), 0 0 15px var(--diamond-primary-color, #E5E7EB), 0 0 20px #fff, 0 0 25px #fff; }
  100% { text-shadow: 0 0 5px var(--diamond-primary-color, #E5E7EB), 0 0 10px var(--diamond-primary-color, #E5E7EB), 0 0 15px #fff, 0 0 20px #fff; }
}

.animate-shimmer-text {
  animation: shimmer 3s infinite;
}

/* Classes personalizadas para SmartLinkMobilePreview */
@keyframes pulse-glow {
  0%, 100% { box-shadow: 0 0 20px rgba(0, 0, 0, 0.1); }
  50% { box-shadow: 0 0 40px rgba(0, 0, 0, 0.2); }
}

.bg-gradient-radial {
  background: radial-gradient(circle, var(--tw-gradient-stops));
}

.animate-pulse-glow {
  animation: pulse-glow 3s ease-in-out infinite;
}

/* Melhorias para transições suaves */
.transition-all-smooth {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Glassmorphism effect para o mockup */
.glass-effect {
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

/* Efeito de reflexo no dispositivo */
.device-reflection {
  position: relative;
}

.device-reflection::after {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(
    45deg,
    transparent 30%,
    rgba(255, 255, 255, 0.1) 50%,
    transparent 70%
  );
  border-radius: inherit;
  pointer-events: none;
}

/* Animações para o template NightHustle */
@keyframes flicker-text {
  0%, 18%, 22%, 25%, 53%, 57%, 100% {
    text-shadow:
      0 0 4px var(--night-hustle-accent-color, #7B00FF),
      0 0 10px var(--night-hustle-accent-color, #7B00FF),
      0 0 18px var(--night-hustle-accent-color, #7B00FF),
      0 0 38px var(--night-hustle-accent-color, #7B00FF),
      0 0 73px var(--night-hustle-accent-color, #7B00FF);
    opacity: 1;
  }
  20%, 24%, 55% {
    text-shadow: none;
    opacity: 0.8;
  }
}

@keyframes flicker-box {
  0%, 18%, 22%, 25%, 53%, 57%, 100% {
    box-shadow:
      0 0 5px var(--night-hustle-accent-color, #7B00FF),
      0 0 10px var(--night-hustle-accent-color, #7B00FF),
      0 0 15px var(--night-hustle-accent-color, #7B00FF) inset,
      0 0 20px var(--night-hustle-accent-color, #7B00FF) inset;
    opacity: 1;
  }
  20%, 24%, 55% {
    box-shadow: none;
    opacity: 0.9;
  }
}

.animate-flicker-text {
  animation: flicker-text 1.5s infinite alternate;
}

.animate-flicker-box {
  animation: flicker-box 2s infinite alternate;
}

/* Animações e estilos para o template StagePresence */
@keyframes light-sweep-1 {
  0% { transform: translateX(-100%) skewX(-20deg); opacity: 0; }
  20% { opacity: 0.7; }
  80% { opacity: 0.7; }
  100% { transform: translateX(100%) skewX(-20deg); opacity: 0; }
}
.animate-light-sweep-1 {
  animation: light-sweep-1 8s linear infinite;
  animation-delay: 0s;
}

@keyframes light-sweep-2 {
  0% { transform: translateX(100%) skewX(20deg); opacity: 0; }
  20% { opacity: 0.6; }
  80% { opacity: 0.6; }
  100% { transform: translateX(-100%) skewX(20deg); opacity: 0; }
}
.animate-light-sweep-2 {
  animation: light-sweep-2 8s linear infinite;
  animation-delay: -4s; /* Desfasado */
}

/* Gradiente radial para o fundo do StagePresence */
.bg-gradient-radial-stage-presence {
  background-image: radial-gradient(circle at center, var(--tw-gradient-stops));
}

/* A classe .diamond-particle-placeholder é usada no JSX para aplicar estilos inline incluindo a animação 'fall'.
   Se preferir uma classe CSS global para as partículas, defina-a aqui e aplique no JSX.
   Exemplo:
   .diamond-particle {
     position: absolute;
     width: 10px;
     height: 10px;
     background-color: rgba(255, 255, 255, 0.7);
     clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
     animation-name: fall;
     animation-timing-function: linear;
     animation-iteration-count: infinite;
     // animation-duration e animation-delay podem ser variados inline ou com JS
   }
*/
